{"version":3,"sources":["components/Location.js","components/Cuisine.js","components/Search.js","components/Restaurant.js","components/MapContainer.js","components/Result.js","App.js","serviceWorker.js","index.js","light-logo.png","background.jpg"],"names":["API_KEY","styles","createStyles","root","width","alignSelf","padding","& label.Mui-focused","color","& .MuiOutlinedInput-root","&.Mui-focused fieldset","borderColor","border","@media screen and (max-width: 500px)","container","position","suggestionsContainerOpen","zIndex","left","right","maxHeight","overflow","suggestion","display","suggestionsList","margin","listStyleType","renderSuggestion","_ref","query","isHighlighted","matches","match","name","parts","parse","react_default","a","createElement","MenuItem","selected","component","map","part","key","text","style","fontWeight","highlight","renderInputComponent","inputProps","classes","_inputProps$inputRef","inputRef","ref","other","Object","objectWithoutProperties","TextField","assign","fullWidth","variant","InputProps","node","input","Location","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadSuggestions","_ref2","asyncToGenerator","regenerator_default","mark","_callee","value","inputValue","api_call","data","wrap","_context","prev","next","trim","toLowerCase","length","fetch","concat","headers","Content-Type","user-key","sent","json","setState","suggestions","location_suggestions","abrupt","stop","_x","apply","arguments","getSuggestionValue","onChange","event","_ref3","newValue","onSuggestionsFetchRequested","_ref4","debouncedLoadSuggestions","onSuggestionsClearRequested","handleSelection","_ref5","handleLocationSelection","id","state","_","debounce","className","dist_default","onSuggestionSelected","label","placeholder","theme","renderSuggestionsContainer","options","Paper","containerProps","square","children","React","Component","withStyles","cuisine","cuisine_name","locationId","disabled","Cuisine","getSuggestions","inputLength","filter","s","slice","handleCuisineSelection","cuisine_id","prevProps","prevState","loadSuggestion","response","cuisines","button","boxShadow","backgroundColor","fontSize","letterSpacing","textTransform","fontFamily","&:hover","flexGrow","gridArea","main","backgroundImage","background","backgroundSize","height","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","alignItems","form","borderRadius","flexDirection","@media screen and (max-width: 900px)","justifySelf","mobileForm","h1","logo","Search","cuisineId","handleSubmit","e","preventDefault","queryString","stringify","location","history","push","alt","src","components_Location","components_Cuisine","Button","onClick","createMuiTheme","palette","primary","500","Restaurant","restaurant","ThemeProvider","Card","card","CardMedia","media","image","featured_image","title","grid","info","CardContent","cardContent","header","subheader","paragraph","user_rating","rating_color","rating_text","aggregate_rating","average_cost_for_two","currency","address","locality","zipcode","city","gridButtons","buttons","link","href","menu_url","target","rel","url","has_table_booking","ChevronRight_default","arrow","arrowOnClick","@media screen and (max-width: 745px)","paddingTop","justifyContent","textDecoration","cursor","MapContainer","restaurants","Fragment","google_maps_react_dist","google","zoom","containerStyle","center","lat","lng","initialCenter","latitude","longitude","index","markerOnClick","GoogleApiWrapper","apiKey","Result","selectRestaurants","copy","selectedRestaurants","i","Math","floor","random","splice","find","r","longtitude","values","search","getRestaurants","AppBar","boxSizing","Toolbar","react_router_dom","to","hyperlink","components_Restaurant","components_MapContainer","marginLeft","App","react_router","path","exact","Boolean","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c77fd1bb.chunk.js","sourcesContent":["import React from \"react\";\nimport Autosuggest from \"react-autosuggest\";\nimport _ from \"lodash\";\nimport match from \"autosuggest-highlight/match\";\nimport parse from \"autosuggest-highlight/parse\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst API_KEY = \"2d0e89daf27dd516eb7dcf5208bd83de\";\n\nconst styles = createStyles({\n    root: {\n        width: \"100%\",\n        alignSelf: \"end\",\n        padding: \"0 0 30px\",\n        \"& label.Mui-focused\": {\n            color: \"#34495e\"\n        },\n        \"& .MuiOutlinedInput-root\": {\n            \"&.Mui-focused fieldset\": {\n                borderColor: \"#34495e\",\n                border: \"1px solid #34495e\"\n            }\n        },\n        \"@media screen and (max-width: 500px)\": {\n            width: \"calc(100vw - 40px)\",\n            alignSelf: \"center\",\n            padding: \"20px\"\n        }\n    },\n    container: {\n        position: \"relative\"\n    },\n    suggestionsContainerOpen: {\n        position: \"absolute\",\n        zIndex: 2,\n        left: 0,\n        right: 0,\n        maxHeight: \"300px\",\n        overflow: \"auto\"\n    },\n    suggestion: {\n        display: \"block\"\n    },\n    suggestionsList: {\n        margin: 0,\n        padding: 0,\n        listStyleType: \"none\"\n    }\n});\n\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\n    const matches = match(suggestion.name, query);\n    const parts = parse(suggestion.name, matches);\n\n    return (\n        <MenuItem selected={isHighlighted} component=\"div\">\n            <div>\n                {parts.map(part => (\n                    <span\n                        key={part.text}\n                        style={{ fontWeight: part.highlight ? 500 : 400 }}\n                    >\n                        {part.text}\n                    </span>\n                ))}\n            </div>\n        </MenuItem>\n    );\n}\n\nfunction renderInputComponent(inputProps) {\n    const { classes, inputRef = () => {}, ref, ...other } = inputProps;\n\n    return (\n        <TextField\n            fullWidth\n            variant=\"outlined\"\n            InputProps={{\n                inputRef: node => {\n                    ref(node);\n                    inputRef(node);\n                },\n                classes: {\n                    input: classes.input\n                }\n            }}\n            {...other}\n        />\n    );\n}\n\nclass Location extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\", // typed value\n            suggestions: [] // suggestion list from API\n        };\n\n        // delays suggestions before suggestion fetching\n        this.debouncedLoadSuggestions = _.debounce(this.loadSuggestions, 200);\n    }\n\n    loadSuggestions = async value => {\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n\n        if (inputLength > 2) {\n            const api_call = await fetch(\n                `https://developers.zomato.com/api/v2.1/cities?q=${value}`,\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"user-key\": API_KEY\n                    }\n                }\n            );\n            const data = await api_call.json();\n            this.setState({ suggestions: data.location_suggestions });\n        } else {\n            return [];\n        }\n    };\n\n    getSuggestionValue = suggestion => suggestion.name;\n\n    onChange = (event, { newValue }) => this.setState({ value: newValue });\n\n    // Autosuggest will call this function every time you need to update suggestions\n    onSuggestionsFetchRequested = ({ value }) =>\n        this.debouncedLoadSuggestions(value);\n\n    // Autosuggest will call this function every time you need to clear suggestions\n    onSuggestionsClearRequested = () => this.setState({ suggestions: [] });\n\n    // Getting city id\n    handleSelection = (event, { suggestion }) => {\n        this.props.handleLocationSelection(suggestion.id);\n    };\n\n    render() {\n        const classes = this.props.classes;\n        return (\n            <div className={classes.root}>\n                <Autosuggest\n                    suggestions={this.state.suggestions}\n                    onSuggestionsFetchRequested={\n                        this.onSuggestionsFetchRequested\n                    }\n                    onSuggestionsClearRequested={\n                        this.onSuggestionsClearRequested\n                    }\n                    getSuggestionValue={this.getSuggestionValue}\n                    onSuggestionSelected={this.handleSelection}\n                    renderSuggestion={renderSuggestion}\n                    renderInputComponent={renderInputComponent}\n                    inputProps={{\n                        classes,\n                        id: \"react-autosuggest-simple\",\n                        label: \"Location\",\n                        placeholder: \"Type a city\",\n                        value: this.state.value,\n                        onChange: this.onChange\n                    }}\n                    theme={{\n                        container: classes.container,\n                        suggestionsContainerOpen:\n                            classes.suggestionsContainerOpen,\n                        suggestionsList: classes.suggestionsList,\n                        suggestion: classes.suggestion\n                    }}\n                    renderSuggestionsContainer={options => (\n                        <Paper {...options.containerProps} square>\n                            {options.children}\n                        </Paper>\n                    )}\n                />\n            </div>\n        );\n    }\n}\n\nLocation.propTypes = {\n    handleLocationSelection: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Location);\n","import React from \"react\";\nimport Autosuggest from \"react-autosuggest\";\nimport match from \"autosuggest-highlight/match\";\nimport parse from \"autosuggest-highlight/parse\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst API_KEY = \"2d0e89daf27dd516eb7dcf5208bd83de\";\n\nconst styles = createStyles({\n    root: {\n        width: \"100%\",\n        alignSelf: \"end\",\n        padding: \"0 0 30px\",\n        \"& label.Mui-focused\": {\n            color: \"#34495e\"\n        },\n        \"& .MuiOutlinedInput-root\": {\n            \"&.Mui-focused fieldset\": {\n                borderColor: \"#34495e\",\n                border: \"1px solid #34495e\"\n            }\n        },\n        \"@media screen and (max-width: 500px)\": {\n            width: \"calc(100vw - 40px)\",\n            alignSelf: \"center\",\n            padding: \"0 20px 20px\"\n        }\n    },\n    container: {\n        position: \"relative\"\n    },\n    suggestionsContainerOpen: {\n        position: \"absolute\",\n        zIndex: 1,\n        left: 0,\n        right: 0\n    },\n    suggestion: {\n        display: \"block\"\n    },\n    suggestionsList: {\n        margin: 0,\n        padding: 0,\n        listStyleType: \"none\"\n    }\n});\n\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\n    const matches = match(suggestion.cuisine.cuisine_name, query);\n    const parts = parse(suggestion.cuisine.cuisine_name, matches);\n\n    return (\n        <MenuItem selected={isHighlighted} component=\"div\">\n            <div>\n                {parts.map(part => (\n                    <span\n                        key={part.text}\n                        style={{ fontWeight: part.highlight ? 500 : 400 }}\n                    >\n                        {part.text}\n                    </span>\n                ))}\n            </div>\n        </MenuItem>\n    );\n}\n\nfunction renderInputComponent(inputProps) {\n    const {\n        classes,\n        inputRef = () => {},\n        ref,\n        locationId,\n        ...other\n    } = inputProps;\n\n    return (\n        <TextField\n            variant=\"outlined\"\n            fullWidth\n            disabled={locationId === null}\n            InputProps={{\n                inputRef: node => {\n                    ref(node);\n                    inputRef(node);\n                },\n                classes: {\n                    input: classes.input\n                }\n            }}\n            {...other}\n        />\n    );\n}\n\nclass Cuisine extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\",\n            suggestions: []\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            prevProps.locationId !== this.props.locationId &&\n            this.props.locationId !== null\n        ) {\n            this.loadSuggestion();\n        }\n    }\n\n    async loadSuggestion() {\n        const response = await fetch(\n            `https://developers.zomato.com/api/v2.1/cuisines?city_id=${\n                this.props.locationId\n            }`,\n            {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"user-key\": API_KEY\n                }\n            }\n        );\n        const data = await response.json();\n        this.setState({ suggestions: data.cuisines });\n    }\n\n    getSuggestions = value => {\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n\n        return inputLength === 0\n            ? []\n            : this.state.suggestions.filter(\n                  s =>\n                      s.cuisine.cuisine_name\n                          .toLowerCase()\n                          .slice(0, inputLength) === inputValue\n              );\n    };\n\n    getSuggestionValue = suggestion => suggestion.cuisine.cuisine_name;\n\n    onChange = (event, { newValue }) => this.setState({ value: newValue });\n\n    // Autosuggest will call this function every time you need to update suggestions\n    onSuggestionsFetchRequested = ({ value }) =>\n        this.setState({ suggestions: this.getSuggestions(value) });\n\n    // Autosuggest will call this function every time you need to clear suggestions\n    onSuggestionsClearRequested = () => this.setState({ suggestions: [] });\n\n    // Getting cuisine id\n    handleSelection = (event, { suggestion }) => {\n        this.props.handleCuisineSelection(suggestion.cuisine.cuisine_id);\n    };\n\n    render() {\n        const classes = this.props.classes;\n        return (\n            <div className={classes.root}>\n                <Autosuggest\n                    suggestions={this.state.suggestions}\n                    onSuggestionsFetchRequested={\n                        this.onSuggestionsFetchRequested\n                    }\n                    onSuggestionsClearRequested={\n                        this.onSuggestionsClearRequested\n                    }\n                    getSuggestionValue={this.getSuggestionValue}\n                    onSuggestionSelected={this.handleSelection}\n                    renderSuggestion={renderSuggestion}\n                    renderInputComponent={renderInputComponent}\n                    inputProps={{\n                        classes,\n                        id: \"react-autosuggest-simple\",\n                        label: \"Cuisine\",\n                        placeholder: \"Type a cuisine\",\n                        value: this.state.value,\n                        onChange: this.onChange,\n                        locationId: this.props.locationId\n                    }}\n                    theme={{\n                        container: classes.container,\n                        suggestionsContainerOpen:\n                            classes.suggestionsContainerOpen,\n                        suggestionsList: classes.suggestionsList,\n                        suggestion: classes.suggestion\n                    }}\n                    renderSuggestionsContainer={options => (\n                        <Paper {...options.containerProps} square>\n                            {options.children}\n                        </Paper>\n                    )}\n                />\n            </div>\n        );\n    }\n}\n\nCuisine.propTypes = {\n    locationId: PropTypes.number,\n    handleCuisineSelection: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Cuisine);\n","import React from \"react\";\nimport queryString from \"query-string\";\nimport Location from \"./Location\";\nimport Cuisine from \"./Cuisine\";\nimport { withStyles } from \"@material-ui/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport logo from \"../light-logo.png\";\nimport background from \"../background.jpg\";\n\nconst styles = {\n    button: {\n        alignSelf: \"flex-end\",\n        boxShadow: \"none\",\n        backgroundColor: \"#34495e\",\n        padding: \"10px 20px\",\n        color: \"#fff\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        letterSpacing: 0,\n        textTransform: \"none\",\n        fontFamily: \"Montserrat\",\n        \"&:hover\": {\n            backgroundColor: \"#5c6d7e\"\n        },\n        \"@media screen and (max-width: 500px)\": {\n            width: \"calc(100vw - 40px)\",\n            padding: \"10px\",\n            margin: \"0 0 20px\",\n            alignSelf: \"center\"\n        }\n    },\n    input: {\n        display: \"none\"\n    },\n    root: {\n        flexGrow: 1,\n        gridArea: \"header\"\n    },\n    main: {\n        backgroundImage: `url(${background})`,\n        backgroundSize: \"cover\",\n        height: \"100vh\",\n        width: \"100%\",\n        display: \"grid\",\n        gridTemplateColumns: \"1fr\",\n        gridTemplateRows: \"80px 1fr\",\n        gridTemplateAreas: `\n\t\t\t\"header\"\n\t\t\t\"form\"\n\t\t`,\n        alignItems: \"start\"\n    },\n    form: {\n        gridArea: \"form\",\n        borderRadius: \"4px\",\n        backgroundColor: \"#fff\",\n        padding: \"32px 32px 24px 32px\",\n        width: \"380px\",\n        boxShadow: \"0 16px 40px rgba(0,0,0,0.12)\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignSelf: \"center\",\n        margin: \"0 0 80px 80px\",\n        \"@media screen and (max-width: 900px)\": {\n            justifySelf: \"center\",\n            alignSelf: \"start\",\n            margin: \"100px 0 0\"\n        },\n        \"@media screen and (max-width: 500px)\": {\n            width: \"calc(100vw - 40px)\",\n            margin: \"0\",\n            padding: \"20px 0\",\n            justifySelf: \"center\",\n            backgroundColor: \"transparent\"\n        }\n    },\n    mobileForm: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        \"@media screen and (max-width: 500px)\": {\n            alignSelf: \"center\",\n            backgroundColor: \"#fff\"\n        }\n    },\n    h1: {\n        color: \"rgb(72, 72, 72)\",\n        fontSize: \"2em\",\n        fontWeight: \"700\",\n        margin: \"0\",\n        padding: \"0 0 30px\",\n        \"@media screen and (max-width: 500px)\": {\n            color: \"#fff\",\n            padding: \"0 0 15px\"\n        }\n    },\n    logo: {\n        height: \"20px\",\n        padding: \"30px\"\n    }\n};\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            locationId: null, // to be sent to the API\n            cuisineId: null // to be sent to the API\n        };\n    }\n\n    handleLocationSelection = locationId => {\n        this.setState({ locationId });\n    };\n\n    handleCuisineSelection = cuisineId => this.setState({ cuisineId });\n\n    handleSubmit = e => {\n        e.preventDefault();\n        const query = queryString.stringify({\n            location: this.state.locationId,\n            cuisine: this.state.cuisineId\n        });\n        this.props.history.push(`/restaurants?${query}`);\n    };\n\n    render() {\n        const classes = this.props.classes;\n        return (\n            <div className={classes.main}>\n                <div className={classes.root}>\n                    <img className={classes.logo} alt=\"logo\" src={logo} />\n                </div>\n                <div className={classes.form}>\n                    <h1 className={classes.h1}>\n                        Find the best places to eat in your city.\n                    </h1>\n                    <div className={classes.mobileForm}>\n                        <Location\n                            handleLocationSelection={\n                                this.handleLocationSelection\n                            }\n                        />\n                        <Cuisine\n                            locationId={this.state.locationId}\n                            handleCuisineSelection={this.handleCuisineSelection}\n                        />\n                        <Button\n                            variant=\"contained\"\n                            className={classes.button}\n                            onClick={this.handleSubmit}\n                        >\n                            Search\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Search);\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport PropTypes from \"prop-types\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: { 500: \"#34495e\" }\n    }\n});\n\nconst styles = {\n    grid: {\n        display: \"grid\",\n        gridTemplateColumns: \"350px 50px\",\n        gridTemplateRows: \"1fr 72px\",\n        gridTemplateAreas: `\n            \"restaurant next\"\n            \"buttons buttons\"\n        `,\n        \"@media screen and (max-width: 745px)\": {\n            gridTemplateColumns: \"calc(100vw - 40px) 40px\"\n        }\n    },\n    info: {\n        padding: \"0\",\n        gridArea: \"restaurant\"\n    },\n    card: {\n        overflow: \"auto\",\n        borderRadius: \"0\",\n        \"@media screen and (max-width: 745px)\": {\n            height: \"100%\",\n            overflow: \"none\"\n        }\n    },\n    media: {\n        height: 0,\n        paddingTop: \"56.25%\" // 16:9\n    },\n    cardContent: {\n        padding: \"36px 16px\"\n    },\n    header: {\n        margin: \"0 0 20px\"\n    },\n    subheader: {\n        fontWeight: \"600\",\n        margin: \"0 0 14px\"\n    },\n    label: {\n        fontWeight: \"500\"\n    },\n    paragraph: {\n        margin: \"0 0 14px\"\n    },\n    address: {\n        margin: \"0\"\n    },\n    gridButtons: {\n        gridArea: \"buttons\"\n    },\n    buttons: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        padding: \"0 16px 36px\",\n        \"@media screen and (max-width: 745px)\": {\n            flexDirection: \"column\",\n            padding: \"0 16px 16px\"\n        }\n    },\n    button: {\n        margin: \"0 10px 0 0\",\n        \"@media screen and (max-width: 745px)\": {\n            margin: \"0 0 20px\"\n        }\n    },\n    link: {\n        textDecoration: \"none\"\n    },\n    next: {\n        gridArea: \"next\",\n        justifySelf: \"center\"\n    },\n    arrow: {\n        fontSize: \"2.2em\",\n        borderRadius: \"50%\",\n        padding: \"3px\",\n        margin: \"36px 0 0\",\n        cursor: \"pointer\",\n        \"&:hover\": {\n            backgroundColor: \"rgba(0, 0, 0, 0.08)\"\n        }\n    }\n};\n\nclass Restaurant extends React.Component {\n    render() {\n        const restaurant = this.props.restaurant;\n        const classes = this.props.classes;\n\n        if (restaurant) {\n            return (\n                <ThemeProvider theme={theme}>\n                    <Card className={classes.card}>\n                        <CardMedia\n                            className={classes.media}\n                            image={restaurant.featured_image}\n                            title={restaurant.name}\n                        />\n                        <div className={classes.grid}>\n                            <div className={classes.info}>\n                                <CardContent className={classes.cardContent}>\n                                    <h1 className={classes.header}>\n                                        {restaurant.name}\n                                    </h1>\n                                    <p className={classes.subheader}>\n                                        {restaurant.cuisines}\n                                    </p>\n                                    <p className={classes.paragraph}>\n                                        <span className={classes.label}>\n                                            User rating:{\" \"}\n                                        </span>\n                                        <span\n                                            style={{\n                                                color: `#${\n                                                    restaurant.user_rating\n                                                        .rating_color\n                                                }`\n                                            }}\n                                        >\n                                            {restaurant.user_rating.rating_text}{\" \"}\n                                            (\n                                            {\n                                                restaurant.user_rating\n                                                    .aggregate_rating\n                                            }{\" \"}\n                                            / 5)\n                                        </span>\n                                    </p>\n                                    <p className={classes.paragraph}>\n                                        <span className={classes.label}>\n                                            Average cost for two:{\" \"}\n                                        </span>\n                                        {restaurant.average_cost_for_two}\n                                        {restaurant.currency}\n                                    </p>\n                                    <p className={classes.address}>\n                                        <span className={classes.label}>\n                                            Address:\n                                        </span>\n                                        <span>\n                                            {restaurant.location.locality}\n                                            <br />\n                                            {restaurant.location.zipcode}\n                                            <br />\n                                            {restaurant.location.city}\n                                        </span>\n                                    </p>\n                                </CardContent>\n                            </div>\n                            <div className={classes.gridButtons}>\n                                <div className={classes.buttons}>\n                                    <a\n                                        className={classes.link}\n                                        href={restaurant.menu_url}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        <Button\n                                            variant=\"contained\"\n                                            className={classes.button}\n                                            color=\"primary\"\n                                        >\n                                            See menu\n                                        </Button>\n                                    </a>\n                                    <a\n                                        className={classes.link}\n                                        href={restaurant.url}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        <Button\n                                            variant=\"contained\"\n                                            className={classes.button}\n                                            disabled={\n                                                restaurant.has_table_booking\n                                                    ? true\n                                                    : false\n                                            }\n                                            color=\"primary\"\n                                        >\n                                            Book a table\n                                        </Button>\n                                    </a>\n                                </div>\n                            </div>\n                            <div className={classes.next}>\n                                <ChevronRight\n                                    className={classes.arrow}\n                                    onClick={this.props.arrowOnClick}\n                                />\n                            </div>\n                        </div>\n                    </Card>\n                </ThemeProvider>\n            );\n        } else {\n            return <div />;\n        }\n    }\n}\n\nRestaurant.propTypes = {\n    restaurant: PropTypes.object,\n    arrowOnClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Restaurant);\n","import React from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\nimport PropTypes from \"prop-types\";\n\nclass MapContainer extends React.Component {\n    render() {\n        const restaurants = this.props.restaurants;\n\n        return (\n            <React.Fragment>\n                {restaurants.length > 0 && (\n                    <Map\n                        google={this.props.google}\n                        zoom={12}\n                        containerStyle={{ position: \"relative\" }}\n                        center={{ lat: this.props.lat, lng: this.props.lng }}\n                        initialCenter={{\n                            lat: restaurants[0].location.latitude,\n                            lng: restaurants[0].location.longitude\n                        }}\n                    >\n                        {restaurants.map((restaurant, index) => {\n                            return (\n                                <Marker\n                                    key={restaurant.id}\n                                    title={restaurant.name}\n                                    name={restaurant.name}\n                                    position={{\n                                        lat: restaurant.location.latitude,\n                                        lng: restaurant.location.longitude\n                                    }}\n                                    onClick={e =>\n                                        this.props.markerOnClick(\n                                            restaurant.id,\n                                            index\n                                        )\n                                    }\n                                />\n                            );\n                        })}\n                    </Map>\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nMapContainer.propTypes = {\n    restaurants: PropTypes.array.isRequired,\n    markerOnClick: PropTypes.func.isRequired,\n    lat: PropTypes.string,\n    lng: PropTypes.string\n};\n\nexport default GoogleApiWrapper({\n    apiKey: \"AIzaSyDPiXRQChLCChCAQT02pL5IRi3xo_iDhEM\"\n})(MapContainer);\n","import React from \"react\";\nimport Restaurant from \"./Restaurant\";\nimport queryString from \"query-string\";\nimport MapContainer from \"./MapContainer\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport logo from \"../light-logo.png\";\nimport { Link } from \"react-router-dom\";\n\nconst API_KEY = \"2d0e89daf27dd516eb7dcf5208bd83de\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: { 500: \"#34495e\" }\n    }\n});\n\nconst styles = {\n    root: {\n        gridArea: \"header\",\n        zIndex: \"2\",\n        height: \"64px\",\n        display: \"flex\",\n        flexDirection: \"row\"\n    },\n    container: {\n        height: \"100vh\",\n        width: \"100%\",\n        display: \"grid\",\n        gridTemplateColumns: \"400px 1fr\",\n        gridTemplateRows: \"64px 1fr\",\n        gridTemplateAreas: `\n\t\t\t\"header header\"\n\t\t\t\"info map\"\n\t\t`,\n        \"@media screen and (max-width: 745px)\": {\n            gridTemplateColumns: \"1fr\",\n            gridTemplateRows: \"64px 100% 300px\",\n            gridTemplateAreas: `\n\t\t\t\"header\"\n\t\t\t\"info\"\n\t\t\t\"map\"\n\t\t\t`\n        }\n    },\n    logo: {\n        height: \"20px\",\n        padding: \"22px 0\"\n    },\n    link: {\n        marginLeft: \"auto\",\n        textDecoration: \"none\"\n    },\n    hyperlink: {\n        color: \"#fff\",\n        fontWeight: \"500\",\n        \"&:hover\": {\n            textDecoration: \"underline\"\n        }\n    },\n    restaurant: {\n        gridArea: \"info\"\n    },\n    map: {\n        gridArea: \"map\"\n    }\n};\n\nclass Result extends React.Component {\n    state = {\n        locationId: null,\n        cuisineId: null,\n        restaurants: [], // array of 3 randomly selected restaurants\n        selected: 0, // index of the restaurant that's currently on display (index zero is default)\n        lat: null, // used to recenter the marker on a map when restaurants change\n        lng: null // used to recenter the marker on a map when restaurants change\n    };\n\n    // getting location ID & cuisine ID from the query string\n    componentDidMount() {\n        const values = queryString.parse(this.props.location.search);\n        this.setState(\n            {\n                locationId: values.location,\n                cuisineId: values.cuisine\n            },\n            this.getRestaurants\n        );\n    }\n\n    // getting 10 best evaluated restaurants from an API\n    async getRestaurants() {\n        if (this.state.locationId !== null && this.state.cuisineId !== null) {\n            const api_call = await fetch(\n                `https://developers.zomato.com/api/v2.1/search?entity_id=${\n                    this.state.locationId\n                }&entity_type=city&count=10&cuisines=${\n                    this.state.cuisineId\n                }&sort=rating&order=desc`,\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"user-key\": API_KEY\n                    }\n                }\n            );\n\n            const data = await api_call.json();\n            this.selectRestaurants(data.restaurants);\n        }\n    }\n\n    // select 3 random restaurants\n    selectRestaurants = copy => {\n        let selectedRestaurants = [];\n\n        for (let i = 0; i < 3; i++) {\n            var index = Math.floor(Math.random() * copy.length);\n            selectedRestaurants.push(copy[index].restaurant);\n            copy.splice(index, 1);\n        }\n\n        this.setState({ restaurants: selectedRestaurants });\n    };\n\n    // Changing the restaurant on display when the marker is clicked\n    markerOnClick = (id, index) => {\n        const restaurant = this.state.restaurants.find(r => r.id === id);\n        if (restaurant) {\n            this.setState({\n                selected: index,\n                lat: restaurant.location.latitude,\n                lng: restaurant.location.longtitude\n            });\n        }\n    };\n\n    // Changing restaurant when an arrow is clicked\n    arrowOnClick = () => {\n        let selected = 0;\n        if (this.state.selected !== this.state.restaurants.length - 1) {\n            selected = this.state.selected + 1;\n        }\n\n        const lat = this.state.restaurants[selected].location.latitude;\n        const lng = this.state.restaurants[selected].location.longitude;\n\n        this.setState({ selected, lat, lng });\n    };\n\n    render() {\n        const classes = this.props.classes;\n        return (\n            <div className={classes.container}>\n                <div className={classes.root}>\n                    <ThemeProvider theme={theme}>\n                        <AppBar\n                            position=\"static\"\n                            color=\"primary\"\n                            style={{ height: \"100%\", boxSizing: \"border-box\" }}\n                        >\n                            <Toolbar>\n                                <Link to=\"/\">\n                                    <img\n                                        className={classes.logo}\n                                        alt=\"logo\"\n                                        src={logo}\n                                    />\n                                </Link>\n                                <Link to=\"/\" className={classes.link}>\n                                    <p className={classes.hyperlink}>\n                                        Back to search\n                                    </p>\n                                </Link>\n                            </Toolbar>\n                        </AppBar>\n                    </ThemeProvider>\n                </div>\n                <Restaurant\n                    className={classes.restaurant}\n                    restaurant={this.state.restaurants[this.state.selected]}\n                    arrowOnClick={this.arrowOnClick}\n                />\n                <MapContainer\n                    className={classes.map}\n                    lat={this.state.lat}\n                    lng={this.state.lng}\n                    restaurants={this.state.restaurants}\n                    markerOnClick={this.markerOnClick}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Result);\n","import React from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport Search from \"./components/Search\";\nimport Result from \"./components/Result\";\n\nconst App = () => (\n    <HashRouter>\n        <Switch>\n            <Route path=\"/\" component={Search} exact />\n            <Route path=\"/restaurants\" component={Result} />\n        </Switch>\n    </HashRouter>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/light-logo.b1dc3f7e.png\";","module.exports = __webpack_public_path__ + \"static/media/background.4d69c223.jpg\";"],"sourceRoot":""}